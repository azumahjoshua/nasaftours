"""
Django settings for nasaftours project.
Generated by 'django-admin startproject' using Django 5.2.1.
"""

import os
from dotenv import load_dotenv
from pathlib import Path

load_dotenv()

# Build paths
BASE_DIR = Path(__file__).resolve().parent.parent
ENVIRONMENT = os.getenv("ENV", "production")  # Default to production for Azure

# Security settings
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
DEBUG = os.getenv("DEBUG", "False") == "True"  # Ensure False in production
ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "localhost").split(",")

# Production HTTPS settings
SECURE_SSL_REDIRECT = not DEBUG  # Redirect HTTP to HTTPS
SECURE_HSTS_SECONDS = 31536000 if not DEBUG else 0  # 1 year HSTS
SECURE_HSTS_INCLUDE_SUBDOMAINS = not DEBUG
SECURE_HSTS_PRELOAD = not DEBUG
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'
CSRF_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tourghanaapp',
    'compressor',
    'ckeditor',
    'ckeditor_uploader',
    'storages',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS settings (uncomment if needed)
CORS_ALLOWED_ORIGINS = os.getenv("CORS_ALLOWED_ORIGINS", "").split(",")

ROOT_URLCONF = 'nasaftours.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'nasaftours.wsgi.application'

# Database (Azure PostgreSQL)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_NAME', 'nasaftours_db'),
        'USER': os.getenv('DATABASE_USERNAME', 'postgres'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD', ''),
        'HOST': os.getenv('DATABASE_HOST', 'your-postgres-server.postgres.database.azure.com'),
        'PORT': os.getenv('DATABASE_PORT', '5432'),
        'OPTIONS': {
            'sslmode': 'require',  # Enforce SSL for Azure PostgreSQL
        },
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Africa/Accra'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
COMPRESS_ROOT = BASE_DIR / 'static'
COMPRESS_ENABLED = True

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
]

# Media files (Azure Storage)
DEFAULT_FILE_STORAGE = 'tourghanaapp.storage_backends.AzureMediaStorage'
AZURE_ACCOUNT_NAME = os.getenv("AZURE_ACCOUNT_NAME", "nasaftoursstoragedev")
AZURE_ACCOUNT_KEY = os.getenv("AZURE_ACCOUNT_KEY")
AZURE_CONTAINER = "media"
AZURE_CUSTOM_DOMAIN = f"{AZURE_ACCOUNT_NAME}.blob.core.windows.net"
MEDIA_URL = f"https://{AZURE_CUSTOM_DOMAIN}/{AZURE_CONTAINER}/"

# CKEditor Configuration
CKEDITOR_UPLOAD_PATH = "ckeditor/"
CKEDITOR_STORAGE_BACKEND = 'tourghanaapp.storage_backends.AzureMediaStorage'
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_BROWSE_SHOW_DIRS = True
CKEDITOR_RESTRICT_BY_USER = True
CKEDITOR_ALLOW_NONIMAGE_FILES = False

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 
             'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink'],
            ['RemoveFormat', 'Source', 'Image', 'Table']
        ],
        'height': 300,
        'width': '100%',
        'extraPlugins': 'uploadimage',
        'filebrowserUploadUrl': '/ckeditor/upload/',
        'uploadUrl': '/ckeditor/upload/',
        'removePlugins': 'iframe,flash,scayt,wsc',
        'allowedContent': False,
        'forcePasteAsPlainText': True,
        'image_previewText': ' ',
    },
}

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('EMAIL_HOST_USER')

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'django.log'),
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Caching (optional, uncomment if using Azure Cache for Redis)
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         'LOCATION': os.getenv('REDIS_URL', 'redis://your-redis-server.redis.cache.windows.net:6379/0'),
#         'OPTIONS': {
#             'CLIENT_CLASS': 'django_redis.client.DefaultClient',
#             'PASSWORD': os.getenv('REDIS_PASSWORD'),
#         },
#     }
# }

# Default primary key
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# """
# Django settings for nasaftours project.
# Generated by 'django-admin startproject' using Django 5.2.1.
# """

# import os
# from dotenv import load_dotenv
# from pathlib import Path

# load_dotenv()

# # Build paths
# BASE_DIR = Path(__file__).resolve().parent.parent
# ENVIRONMENT = os.getenv("ENV", "development")

# # Security settings
# SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
# DEBUG = os.getenv("DEBUG", "False") == "True"
# ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "localhost").split(",")

# # Security headers
# SECURE_CONTENT_TYPE_NOSNIFF = True
# X_FRAME_OPTIONS = 'DENY'
# CSRF_COOKIE_SECURE = not DEBUG
# SESSION_COOKIE_SECURE = not DEBUG

# # Application definition
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'tourghanaapp',
#     'compressor',
#     'ckeditor',
#     'ckeditor_uploader',
#     'storages',
# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'nasaftours.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [BASE_DIR / 'templates'],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'nasaftours.wsgi.application'

# # Database
# if os.getenv('DATABASE_ENGINE') == 'postgresql':
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql',
#             'NAME': os.getenv('DATABASE_NAME', 'postgres'),
#             'USER': os.getenv('DATABASE_USERNAME', 'postgres'),
#             'PASSWORD': os.getenv('DATABASE_PASSWORD', ''),
#             'HOST': os.getenv('DATABASE_HOST', 'db'),
#             'PORT': os.getenv('DATABASE_PORT', '5432'),
#         }
#     }
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': BASE_DIR / 'db.sqlite3',
#         }
#     }

# # Password validation
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]

# # Internationalization
# LANGUAGE_CODE = 'en-us'
# TIME_ZONE = 'UTC'
# USE_I18N = True
# USE_TZ = True

# # Static files
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# COMPRESS_ROOT = BASE_DIR / 'static'
# COMPRESS_ENABLED = True

# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'compressor.finders.CompressorFinder',
# ]

# # Media files (Azure Storage)
# DEFAULT_FILE_STORAGE = 'tourghanaapp.storage_backends.AzureMediaStorage'
# AZURE_ACCOUNT_NAME = os.getenv("AZURE_ACCOUNT_NAME", "nasaftoursstoragedev")
# AZURE_ACCOUNT_KEY = os.getenv("AZURE_ACCOUNT_KEY")
# AZURE_CONTAINER = "media"
# AZURE_CUSTOM_DOMAIN = f"{AZURE_ACCOUNT_NAME}.blob.core.windows.net"
# MEDIA_URL = f"https://{AZURE_CUSTOM_DOMAIN}/{AZURE_CONTAINER}/"

# # CKEditor Configuration
# CKEDITOR_UPLOAD_PATH = "ckeditor/"
# CKEDITOR_STORAGE_BACKEND = 'tourghanaapp.storage_backends.AzureMediaStorage'
# CKEDITOR_IMAGE_BACKEND = "pillow"
# CKEDITOR_BROWSE_SHOW_DIRS = True
# CKEDITOR_RESTRICT_BY_USER = True
# CKEDITOR_ALLOW_NONIMAGE_FILES = False  # Only allow image uploads

# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': 'Custom',
#         'toolbar_Custom': [
#             ['Bold', 'Italic', 'Underline'],
#             ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 
#              'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
#             ['Link', 'Unlink'],
#             ['RemoveFormat', 'Source', 'Image', 'Table']
#         ],
#         'height': 300,
#         'width': '100%',
#         'extraPlugins': 'uploadimage',
#         'filebrowserUploadUrl': '/ckeditor/upload/',
#         'uploadUrl': '/ckeditor/upload/',
#         'removePlugins': 'iframe,flash,scayt,wsc',
#         'allowedContent': False,
#         'forcePasteAsPlainText': True,
#         'image_previewText': ' ',
#     },
# }

# # Email settings
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = os.getenv('EMAIL_HOST')
# EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
# EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'
# EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
# DEFAULT_FROM_EMAIL = os.getenv('EMAIL_HOST_USER')

# # Default primary key
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# # """
# # Django settings for nasaftours project.
# # Generated by 'django-admin startproject' using Django 5.2.1.
# # """

# # import os
# # from dotenv import load_dotenv
# # from pathlib import Path

# # load_dotenv()

# # # Build paths
# # BASE_DIR = Path(__file__).resolve().parent.parent
# # ENVIRONMENT = os.getenv("ENV", "development")

# # # Security settings
# # SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
# # DEBUG = os.getenv("DEBUG", "False") == "True"
# # ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "localhost").split(",")

# # # Application definition
# # INSTALLED_APPS = [
# #     'django.contrib.admin',
# #     'django.contrib.auth',
# #     'django.contrib.contenttypes',
# #     'django.contrib.sessions',
# #     'django.contrib.messages',
# #     'django.contrib.staticfiles',
# #     'tourghanaapp',
# #     'compressor',
# #     'ckeditor',
# #     'ckeditor_uploader',
# #     'storages',
# # ]

# # MIDDLEWARE = [
# #     'whitenoise.middleware.WhiteNoiseMiddleware',
# #     'django.middleware.security.SecurityMiddleware',
# #     'django.contrib.sessions.middleware.SessionMiddleware',
# #     'django.middleware.common.CommonMiddleware',
# #     'django.middleware.csrf.CsrfViewMiddleware',
# #     'django.contrib.auth.middleware.AuthenticationMiddleware',
# #     'django.contrib.messages.middleware.MessageMiddleware',
# #     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# # ]

# # ROOT_URLCONF = 'nasaftours.urls'

# # TEMPLATES = [
# #     {
# #         'BACKEND': 'django.template.backends.django.DjangoTemplates',
# #         'DIRS': [BASE_DIR / 'templates'],
# #         'APP_DIRS': True,
# #         'OPTIONS': {
# #             'context_processors': [
# #                 'django.template.context_processors.request',
# #                 'django.contrib.auth.context_processors.auth',
# #                 'django.contrib.messages.context_processors.messages',
# #             ],
# #         },
# #     },
# # ]

# # WSGI_APPLICATION = 'nasaftours.wsgi.application'

# # # Database
# # if os.getenv('DATABASE_ENGINE') == 'postgresql':
# #     DATABASES = {
# #         'default': {
# #             'ENGINE': 'django.db.backends.postgresql',
# #             'NAME': os.getenv('DATABASE_NAME', 'postgres'),
# #             'USER': os.getenv('DATABASE_USERNAME', 'postgres'),
# #             'PASSWORD': os.getenv('DATABASE_PASSWORD', ''),
# #             'HOST': os.getenv('DATABASE_HOST', 'db'),
# #             'PORT': os.getenv('DATABASE_PORT', '5432'),
# #         }
# #     }
# # else:
# #     DATABASES = {
# #         'default': {
# #             'ENGINE': 'django.db.backends.sqlite3',
# #             'NAME': BASE_DIR / 'db.sqlite3',
# #         }
# #     }

# # # Password validation
# # AUTH_PASSWORD_VALIDATORS = [
# #     {
# #         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
# #     },
# #     {
# #         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
# #     },
# #     {
# #         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
# #     },
# #     {
# #         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
# #     },
# # ]

# # # Internationalization
# # LANGUAGE_CODE = 'en-us'
# # TIME_ZONE = 'UTC'
# # USE_I18N = True
# # USE_TZ = True

# # # Static files
# # STATIC_URL = '/static/'
# # STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# # STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# # COMPRESS_ROOT = BASE_DIR / 'static'
# # COMPRESS_ENABLED = True

# # STATICFILES_FINDERS = [
# #     'django.contrib.staticfiles.finders.FileSystemFinder',
# #     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# #     'compressor.finders.CompressorFinder',
# # ]

# # # Media files (Azure Storage)
# # DEFAULT_FILE_STORAGE = 'tourghanaapp.storage_backends.AzureMediaStorage'
# # AZURE_ACCOUNT_NAME = os.getenv("AZURE_ACCOUNT_NAME", "nasaftoursstoragedev")
# # AZURE_ACCOUNT_KEY = os.getenv("AZURE_ACCOUNT_KEY")
# # AZURE_CONTAINER = "media"
# # AZURE_CUSTOM_DOMAIN = f"{AZURE_ACCOUNT_NAME}.blob.core.windows.net"
# # MEDIA_URL = f"https://{AZURE_CUSTOM_DOMAIN}/{AZURE_CONTAINER}/"

# # # CKEditor Configuration
# # CKEDITOR_UPLOAD_PATH = "ckeditor/"
# # CKEDITOR_STORAGE_BACKEND = 'tourghanaapp.storage_backends.AzureMediaStorage'
# # CKEDITOR_IMAGE_BACKEND = "pillow"
# # CKEDITOR_BROWSE_SHOW_DIRS = True
# # CKEDITOR_RESTRICT_BY_USER = True

# # CKEDITOR_CONFIGS = {
# #     'default': {
# #         'toolbar': 'Custom',
# #         'toolbar_Custom': [
# #             ['Bold', 'Italic', 'Underline'],
# #             ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 
# #              'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
# #             ['Link', 'Unlink'],
# #             ['RemoveFormat', 'Source', 'Image', 'Table']
# #         ],
# #         'height': 300,
# #         'width': '100%',
# #          'extraPlugins': 'uploadimage',
# #         'filebrowserUploadUrl': '/ckeditor/upload/',
# #         'uploadUrl': '/ckeditor/upload/',
# #         'removePlugins': 'iframe,flash,scayt,wsc',  # Remove insecure plugins
# #         'allowedContent': False,  # Disallow arbitrary HTML
# #         'forcePasteAsPlainText': True,  # Prevent pasted HTML
# #         'image_previewText': ' ',  # Remove default preview text
# #         # 'extraPlugins': ','.join([
# #         #     'filebrowser',  # Helps with uploads
# #         #     'uploadimage',
# #         #     'div',
# #         #     'autolink',
# #         #     'embed',
# #         #     'autoembed',
# #         ]),
# #     },
# # }

# # # Email settings
# # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# # EMAIL_HOST = os.getenv('EMAIL_HOST')
# # EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
# # EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'
# # EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
# # EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
# # DEFAULT_FROM_EMAIL = os.getenv('EMAIL_HOST_USER')

# # # Default primary key
# # DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# # # """
# # # Django settings for nasaftours project.

# # # Generated by 'django-admin startproject' using Django 5.2.1.

# # # For more information on this file, see
# # # https://docs.djangoproject.com/en/5.2/topics/settings/

# # # For the full list of settings and their values, see
# # # https://docs.djangoproject.com/en/5.2/ref/settings/
# # # """
# # # import os
# # # from dotenv import load_dotenv
# # # load_dotenv()
# # # from pathlib import Path
# # # ENVIRONMENT = os.getenv("ENV", "development")


# # # # Build paths inside the project like this: BASE_DIR / 'subdir'.
# # # BASE_DIR = Path(__file__).resolve().parent.parent

# # # COMPRESS_ROOT = BASE_DIR / 'static'

# # # # MEDIA_URL = '/media/'
# # # # MEDIA_ROOT = BASE_DIR / 'media'

# # # # Azure Storage config for media files
# # # # DEFAULT_FILE_STORAGE = 'storages.backends.azure_storage.AzureStorage'
# # # DEFAULT_FILE_STORAGE = 'tourghanaapp.storage_backends.AzureMediaStorage'
# # # AZURE_ACCOUNT_NAME = os.getenv("AZURE_ACCOUNT_NAME", "nasaftoursstoragedev")
# # # AZURE_ACCOUNT_KEY = os.getenv("AZURE_ACCOUNT_KEY")
# # # AZURE_CONTAINER = "media"
# # # AZURE_CUSTOM_DOMAIN = f"{AZURE_ACCOUNT_NAME}.blob.core.windows.net"


# # # MEDIA_URL = f"https://{AZURE_CUSTOM_DOMAIN}/{AZURE_CONTAINER}/"

# # # # CKEditor Configuration
# # # CKEDITOR_UPLOAD_PATH = "uploads/"
# # # CKEDITOR_CONFIGS = {
# # #     'default': {
# # #         'toolbar': 'Custom',
# # #         'toolbar_Custom': [
# # #             ['Bold', 'Italic', 'Underline'],
# # #             ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 
# # #              'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
# # #             ['Link', 'Unlink'],
# # #             ['RemoveFormat', 'Source', 'Image', 'Table']
# # #         ],
# # #         'height': 300,
# # #         'width': '100%',
# # #         'extraPlugins': ','.join([
# # #             'uploadimage',  # For image uploads
# # #             'div',
# # #             'autolink',
# # #             'embed',
# # #             'autoembed',
# # #         ]),
# # #     },
# # # }

# # # # Azure Storage configuration for CKEditor uploads
# # # CKEDITOR_UPLOAD_PATH = "ckeditor/"
# # # CKEDITOR_STORAGE_BACKEND = 'tourghanaapp.storage_backends.AzureMediaStorage'
# # # CKEDITOR_IMAGE_BACKEND = "pillow"
# # # CKEDITOR_BROWSE_SHOW_DIRS = True
# # # CKEDITOR_RESTRICT_BY_USER = True
# # # CKEDITOR_STORAGE_BACKEND = 'tourghanaapp.storage_backends.AzureMediaStorage'

# # # COMPRESS_ENABLED = True

# # # STATICFILES_FINDERS = [
# # #     'django.contrib.staticfiles.finders.FileSystemFinder',
# # #     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# # #     'compressor.finders.CompressorFinder',
# # # ]


# # # # Quick-start development settings - unsuitable for production
# # # # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # # DEBUG = os.getenv("DEBUG", "False") == "True"
# # # ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "localhost").split(",")


# # # # SECURITY WARNING: keep the secret key used in production secret!
# # # SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
# # # # 
# # # # SECURITY WARNING: don't run with debug turned on in production!
# # # # DEBUG = bool(os.environ.get("DEBUG", default=0))

# # # # ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "localhost").split(",")
# # # # ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS","127.0.0.1").split(",")


# # # # Application definition

# # # INSTALLED_APPS = [
# # #     'django.contrib.admin',
# # #     'django.contrib.auth',
# # #     'django.contrib.contenttypes',
# # #     'django.contrib.sessions',
# # #     'django.contrib.messages',
# # #     'django.contrib.staticfiles',
# # #     'tourghanaapp',  # Custom app for the tour guide website
# # #     'compressor',
# # #     'ckeditor',
# # #     'ckeditor_uploader',
# # #     # 'django_summernote',
# # #     'storages',
# # # ]

# # # MIDDLEWARE = [
# # #     'whitenoise.middleware.WhiteNoiseMiddleware',
# # #     'django.middleware.security.SecurityMiddleware',
# # #     'django.contrib.sessions.middleware.SessionMiddleware',
# # #     'django.middleware.common.CommonMiddleware',
# # #     'django.middleware.csrf.CsrfViewMiddleware',
# # #     'django.contrib.auth.middleware.AuthenticationMiddleware',
# # #     'django.contrib.messages.middleware.MessageMiddleware',
# # #     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# # # ]

# # # ROOT_URLCONF = 'nasaftours.urls'

# # # TEMPLATES = [
# # #     {
# # #         'BACKEND': 'django.template.backends.django.DjangoTemplates',
# # #         'DIRS': [
# # #             BASE_DIR / 'templates',  # Directory for custom templates
# # #         ],
# # #         'APP_DIRS': True,
# # #         'OPTIONS': {
# # #             'context_processors': [
# # #                 'django.template.context_processors.request',
# # #                 'django.contrib.auth.context_processors.auth',
# # #                 'django.contrib.messages.context_processors.messages',
# # #                 'django.template.context_processors.request',
# # #             ],
# # #         },
# # #     },
# # # ]

# # # WSGI_APPLICATION = 'nasaftours.wsgi.application'

# # # if os.getenv('DATABASE_ENGINE') == 'postgresql':
# # #     DATABASES = {
# # #         'default': {
# # #             'ENGINE': 'django.db.backends.postgresql',
# # #             'NAME': os.getenv('DATABASE_NAME', 'postgres'),
# # #             'USER': os.getenv('DATABASE_USERNAME', 'postgres'),
# # #             'PASSWORD': os.getenv('DATABASE_PASSWORD', ''),
# # #             'HOST': os.getenv('DATABASE_HOST', 'db'),
# # #             'PORT': os.getenv('DATABASE_PORT', '5432'),
# # #         }
# # #     }
# # # else:
# # #     DATABASES = {
# # #         'default': {
# # #             'ENGINE': 'django.db.backends.sqlite3',
# # #             'NAME': BASE_DIR / 'db.sqlite3',
# # #         }
# # #     }


# # # # Password validation
# # # # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# # # AUTH_PASSWORD_VALIDATORS = [
# # #     {
# # #         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
# # #     },
# # #     {
# # #         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
# # #     },
# # #     {
# # #         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
# # #     },
# # #     {
# # #         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
# # #     },
# # # ]


# # # # Internationalization
# # # # https://docs.djangoproject.com/en/5.2/topics/i18n/

# # # LANGUAGE_CODE = 'en-us'

# # # TIME_ZONE = 'UTC'

# # # USE_I18N = True

# # # USE_TZ = True


# # # # Static files (CSS, JavaScript, Images)
# # # # https://docs.djangoproject.com/en/5.2/howto/static-files/

# # # STATIC_URL = '/static/'
# # # STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# # # STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


# # # # Default primary key field type
# # # # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# # # DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# # # EMAIL_HOST = os.getenv('EMAIL_HOST')
# # # EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
# # # EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'
# # # EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
# # # EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
# # # DEFAULT_FROM_EMAIL = os.getenv('EMAIL_HOST_USER')

# # # # EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'