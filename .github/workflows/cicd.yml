name: Django CI/CD Pipeline (Azure VM + Docker Hub)

on:
  push:
    branches: [main]

permissions:
  contents: read  # Restrict to read-only for repo contents
  packages: write  # Allow pushing to container registry

env:
  DOCKER_HUB_REPO: joshua192/nasaftours
  COMPOSE_PROJECT_NAME: nasaftours-prod
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: '3.10'  # Stable for Django; change to 3.13 if tested

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black pycodestyle pyflakes bandit pip-audit

      - name: Check Black formatting
        run: |
          black --check nasaftours tourghanaapp --verbose --exclude "(migrations|env|.venv|__pycache__)"

      - name: Run pycodestyle linting
        run: |
          pycodestyle nasaftours tourghanaapp \
            --max-line-length=120 \
            --exclude=.venv,env,migrations,__pycache__,static,templates

      - name: Run pyflakes import checks
        run: |
          pyflakes nasaftours tourghanaapp

      - name: Run Bandit security scan
        run: |
          bandit -r nasaftours tourghanaapp \
            -x tests,migrations,__pycache__,env,.venv

      - name: Scan Python dependencies
        run: |
          pip-audit --requirement requirements.txt --strict

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Build Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: false
          tags: ${{ env.DOCKER_HUB_REPO }}/web:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Django tests in container
        run: |
          docker run --rm \
            -e DJANGO_SETTINGS_MODULE=nasaftours.settings \
            ${{ env.DOCKER_HUB_REPO }}/web:${{ env.IMAGE_TAG }} \
            python manage.py test --noinput

      - name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_HUB_REPO }}/web:latest
            ${{ env.DOCKER_HUB_REPO }}/web:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.DOCKER_HUB_REPO }}/web:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '1'  # Fail on critical/high vulnerabilities
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'


# name: Django CI/CD Pipeline (Azure VM + Docker Hub)

# on:
#   push:
#     branches: [main]

# permissions:
#   contents: read  # Restrict to read-only for repo contents
#   packages: write  # Allow pushing to container registry if needed

# env:
#   DOCKER_HUB_REPO: joshua192/nasaftours
#   COMPOSE_PROJECT_NAME: nasaftours-prod

# jobs:
#   build-test-push:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4.1.1  

#       - name: Set up Python
#         uses: actions/setup-python@v4.7.0
#         with:
#           python-version: '3.10'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Lint code
#         run: |
#           pip install black flake8 bandit
#           black --check .
#           flake8 .
#           bandit -r . -x tests  # Scan for security issues, exclude tests

#       - name: Scan Python dependencies for vulnerabilities
#         run: |
#           pip install pip-audit
#           pip-audit --requirement requirements.txt --strict

#       - name: Run tests
#         run: |
#           python manage.py test --noinput

#       - name: Login to Docker Hub
#         uses: docker/login-action@v2.2.0
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_TOKEN }}

#       - name: Build and push Django image
#         uses: docker/build-push-action@v4.1.1
#         with:
#           context: .
#           push: true
#           tags: |
#             ${{ env.DOCKER_HUB_REPO }}/web:latest
#             ${{ env.DOCKER_HUB_REPO }}/web:${{ github.sha }}
#           cache-from: type=gha
#           cache-to: type=gha,mode=max

#       - name: Scan Docker image for vulnerabilities
#         uses: aquasecurity/trivy-action@0.28.0
#         with:
#           image-ref: ${{ env.DOCKER_HUB_REPO }}/web:${{ github.sha }}
#           format: 'table'
#           exit-code: '1'  # Fail on critical/high vulnerabilities
#           ignore-unfixed: true
#           vuln-type: 'os,library'
#           severity: 'CRITICAL,HIGH'