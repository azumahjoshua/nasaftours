name: Django CI Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

env:
  DOCKER_HUB_REPO: joshua192/nasaftours
  COMPOSE_PROJECT_NAME: nasaftours-prod

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set-tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Set up Python
        uses: actions/setup-python@v4.7.0
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black pycodestyle pyflakes bandit pip-audit

      - name: Check Black formatting
        run: black --check nasaftours tourghanaapp --verbose --exclude "(migrations|env|.venv|__pycache__)"

      - name: Run pycodestyle linting
        run: pycodestyle nasaftours tourghanaapp --max-line-length=120 --exclude=.venv,env,migrations,__pycache__,static,templates

      - name: Run pyflakes import checks
        run: pyflakes nasaftours tourghanaapp

      - name: Run Bandit security scan
        run: bandit -r nasaftours tourghanaapp -x tests,migrations,__pycache__,env,.venv

      - name: Scan Python dependencies
        run: pip-audit --requirement requirements.txt --strict

      - name: Set IMAGE_TAG
        id: set-tag
        run: |
          TAG=$(date +%Y%m%d%H%M%S)
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          echo "IMAGE_TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_HUB_REPO }}:latest
            ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
